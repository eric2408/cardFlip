{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst useAxios = baseUrl => {\n  _s();\n\n  const [state, setState] = useState([]);\n\n  const add = async function () {\n    let formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data => data;\n    let urlName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const res = await axios.get(`${baseUrl}${urlName}`);\n    setState(data => [...data, formatter(res.data)]);\n  };\n\n  const clear = () => setState([]);\n\n  return [state, add, clear];\n};\n\n_s(useAxios, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\n\nexport default useAxios;","map":{"version":3,"names":["useState","axios","useAxios","baseUrl","state","setState","add","formatter","data","urlName","res","get","clear"],"sources":["/home/eric/Springboard/exercises/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst useAxios = (baseUrl) => {\n    const [state, setState] = useState([]);\n\n    const add = async (formatter = data => data, urlName = \"\") => {\n      const res = await axios.get(`${baseUrl}${urlName}`);\n      setState(data => [...data, formatter(res.data)]);\n    };\n\n    const clear = () => setState([]);\n\n    return [state, add, clear];\n}\n\n\nexport default useAxios;"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,OAAD,IAAa;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMM,GAAG,GAAG,kBAAkD;IAAA,IAA3CC,SAA2C,uEAA/BC,IAAI,IAAIA,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IAC5D,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAER,OAAQ,GAAEM,OAAQ,EAA/B,CAAlB;IACAJ,QAAQ,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUD,SAAS,CAACG,GAAG,CAACF,IAAL,CAAnB,CAAT,CAAR;EACD,CAHD;;EAKA,MAAMI,KAAK,GAAG,MAAMP,QAAQ,CAAC,EAAD,CAA5B;;EAEA,OAAO,CAACD,KAAD,EAAQE,GAAR,EAAaM,KAAb,CAAP;AACH,CAXD;;GAAMV,Q;;AAcN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}